import {
  makeDelayProps,
  useDelay
} from "./chunk-R5FTEX6L.js";
import {
  useProxiedModel
} from "./chunk-KVX4XNWL.js";
import {
  defineComponent
} from "./chunk-TN4GUMPP.js";
import "./chunk-U4IYRKUK.js";
import "./chunk-2244K35H.js";
import "./chunk-J43GMYXM.js";

// node_modules/vuetify/lib/components/VHover/VHover.mjs
var VHover = defineComponent({
  name: "VHover",
  props: {
    disabled: Boolean,
    modelValue: {
      type: Boolean,
      default: void 0
    },
    ...makeDelayProps()
  },
  emits: {
    "update:modelValue": (value) => true
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const isHovering = useProxiedModel(props, "modelValue");
    const {
      runOpenDelay,
      runCloseDelay
    } = useDelay(props, (value) => !props.disabled && (isHovering.value = value));
    return () => {
      var _slots$default;
      return (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, {
        isHovering: isHovering.value,
        props: {
          onMouseenter: runOpenDelay,
          onMouseleave: runCloseDelay
        }
      });
    };
  }
});
export {
  VHover
};
//# sourceMappingURL=vuetify_lib_components_VHover_index__mjs.js.map
